"use strict";(self.webpackChunkstakeworld=self.webpackChunkstakeworld||[]).push([[967],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),h=a,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||r;return n?o.createElement(m,i(i({ref:t},c),{},{components:n})):o.createElement(m,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5103:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=n(7462),a=(n(7294),n(3905));const r={id:"disaster",title:"Disaster managment",description:"How to maintain a working node when there are problems",slug:"/disaster",sidebar_position:5},i=void 0,s={unversionedId:"validate/disaster",id:"validate/disaster",title:"Disaster managment",description:"How to maintain a working node when there are problems",source:"@site/docs/validate/disaster.mdx",sourceDirName:"validate",slug:"/disaster",permalink:"/docs/disaster",draft:!1,editUrl:"https://github.com/stakeworld/website/tree/master/packages/create-docusaurus/templates/shared/docs/validate/disaster.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"disaster",title:"Disaster managment",description:"How to maintain a working node when there are problems",slug:"/disaster",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Using a Ledger Wallet",permalink:"/docs/ledger"},next:{title:"Validator error logs",permalink:"/docs/logs"}},l={},d=[{value:"Using backup nodes",id:"using-backup-nodes",level:2},{value:"Chilling nodes",id:"chilling-nodes",level:2}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"When running a validator node it is important to have an action plan in place when there are problems with your node. For example you node server goes down, or a database gets corrupted."),(0,a.kt)("h2",{id:"using-backup-nodes"},"Using backup nodes"),(0,a.kt)("p",null,"Preferably you continue your validating actions with minimum downtime. The quickest and most dangerous option is to start another node with the same session keys. The danger being that running two validator nodes with the same session key is a no go and considered ground for slashing your validator. So this option is only possible when you have access to the original node, can disable the failing node and preferably delete the session keys there so there is no room for double signing. "),(0,a.kt)("p",null,"If for example there is a network outage, you would start a new node with the same session keys and the original node would recover, you would be having two nodes active with the same session keys."),(0,a.kt)("h2",{id:"chilling-nodes"},"Chilling nodes"),(0,a.kt)("p",null,"The other options are chilling your node (taking it out of the validator pool) or create new session keys and link them to your stash. Both have disadvantages, for example when you link new session keys it takes two full sessions before the change is propagated, in the meanwhile you validator is down and could be chilled by the system."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"STAKEWORLD keeps a backup node with backup session keys available so that if a node fails we can quickly continue validating. If there is the risk of double signing (no access to the original node) we will chill the node if there is no other option to avoid slashing"))))}p.isMDXComponent=!0}}]);